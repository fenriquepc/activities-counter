@inject FilesManager FilesManager

<nav class="sidebar @NavMenuCssClass" @onclick="ToggleNavMenu">
	<span id="sidebar-hoverer" />
	<button title="Navigation menu" class="sidebar-toggler btn">
		<i class="fa-solid fa-bars" />
	</button>
	<div class="nav-item px-3">
		<NavLink class="nav-link" href="" Match="NavLinkMatch.All">
			<i class="oi fa-solid fa-house"/>
			Home
		</NavLink>
	</div>
	<div class="nav-item px-3">
		<NavLink class="nav-link" href="actividad">
			<i class="oi fa-solid fa-plus"/>
			Nueva actividad
		</NavLink>
	</div>
	<div class="nav-item px-3">
		<NavLink class="nav-link" href="proximasactividades">
			<i class="oi fa-solid fa-calendar" />
			Próximas actividades
		</NavLink>
	</div>
	<div class="nav-item px-3">
		<NavLink class="nav-link user-select-none" role="button" @onclick="Restore">
			<i class="oi fa-solid fa-trash-arrow-up"/>
			Restaurar actividades
		</NavLink>
	</div>
</nav>

@code {
	[CascadingParameter]
	public IModalService ModalService { get; set; }
	private IModalReference _modal;

	private bool collapseNavMenu = true;

	private string NavMenuCssClass => collapseNavMenu ? "collapsed" : null;

	private void ToggleNavMenu()
	{
		collapseNavMenu = !collapseNavMenu;
	}

	private void Restore()
	{
		var parameters = new ModalParameters()
			.Add(nameof(ConfirmDialog.Message), "¿Seguro que quieres las activiades? Se borrarán todos los cambios")
			.Add(nameof(ConfirmDialog.ConfirmCallback), ConfirmRestore)
			.Add(nameof(ConfirmDialog.CancelCallback), () => _modal.Close());
		var options = new ModalOptions()
			{
				Position = ModalPosition.Middle,
			};

		_modal = ModalService.Show<ConfirmDialog>("Confirmar restauración", parameters, options);
	}

	private async Task ConfirmRestore()
	{
		await FilesManager.LoadFilesData(true);
		_modal.Close();
	}
}
