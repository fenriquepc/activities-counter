@page "/proximasactividades"
@using System.Globalization
@inject IActivitiesManager ActivitiesManager

<PageTitle>Próximas actividades</PageTitle>

<div class="next-activities">
<h1>Próximas actividades</h1>

@if (_activities == null)
{
	<p><em>Cargando...</em></p>
}
else
{
	<table class="activities-table">
		<tbody>
			@foreach (var activity in _activities)
			{
				<tr>
					<td>@GetTimeText(activity.Date)</td>
					<td>
						<HxTooltip Text="Solo para mayores de edad">
							<span class="badge bg-danger adults-only" hidden="@(!activity.AdultsOnly)">+18</span>
						</HxTooltip>
					</td>
					<td>
						@activity.Name 
						<HxTooltip Text="Inscribir participante">
							<HxCollapseToggleButton Text="help" CollapseTarget="@($"#description{activity.Id.ToString()}")" CssClass="material-symbols-outlined more-button fs-6 user-select-none" />
						</HxTooltip>
							<HxCollapse Id="@($"description{activity.Id.ToString()}")" CssClass="activity-description w-50">
							<HxCard BodyCssClass="fs-5">
								<BodyTemplate>
									@activity.Description
								</BodyTemplate>
							</HxCard>
						</HxCollapse>
					</td>
					<td>@activity.AvailableCapacity</td>
					<td class="user-select-none">
						<HxTooltip Text="Inscribir participante">
							<span  @onclick="@(e => ActivitiesManager.AddParticipant(activity, "sfdfg"))" class="material-symbols-outlined">
								group_add
							</span>
						</HxTooltip>
					</td>
					<td class=" user-select-none">
						<HxDropdown>
								<HxDropdownToggleElement CssClass="material-symbols-outlined" role="button">
								settings
							</HxDropdownToggleElement>
							<HxDropdownMenu>
								<HxDropdownItem OnClick="() => ShowModal(activity)">
									<span class="material-symbols-outlined">
										edit
									</span>
									Editar actividad
								</HxDropdownItem>
								<HxDropdownItem>
									<span class="material-symbols-outlined">
										delete
									</span>
									Borrar actividad
								</HxDropdownItem>
							</HxDropdownMenu>
						</HxDropdown>
					</td>
				</tr>
			}
		</tbody>
	</table>
}
</div>
@code {
	[CascadingParameter] 
	public IModalService Modal { get; set; } = default!;

	private IEnumerable<Activity> _activities = default!;

	protected override async Task OnInitializedAsync()
	{
		_activities = await ActivitiesManager.GetNextActivitiesAsync();
	}

	private void ShowModal(Activity activity)
	{
		var parameters = new ModalParameters()
			.Add(nameof(EditActivity.Activity), activity);
		var options = new ModalOptions()
		{
			Position = ModalPosition.Middle
			//Class = "edit-activity-modal"
		};

		var moviesModal = Modal.Show<EditActivity>("Editar actividad", parameters, options);
	}

	private string GetTimeText(DateTime date)
	{
		var result = date.ToString("HH:mm");

		if (date.Date == DateTime.Now.Date)
			return result;

		var ci = new CultureInfo("Es-Es");
		var dayText = ci.DateTimeFormat.GetDayName(date.DayOfWeek).Substring(0, 3);
		return $"{result} ({dayText})";
	}
}